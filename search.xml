<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[NexT主题优化记录]]></title>
    <url>%2F%2Fblog%2FNexT%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[NexT主题优化历程 一九年八月十五日正式开始使用NexT作为博客主题，根据文档进行基本配置优化 修改主题配置文件123456789101112131415161718Scheme: Muselanguage: zh-Hansmenu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive schedule: /schedule/ || calendaravatar: url: http://pw407zrf4.bkt.clouddn.com/%E6%96%91.jpgsidebar: position: right display: post 修改文章页宽打开themes/next/source/css/_variables/base.styl，找到以下字段并修改为合适的宽度： 1234- $content-desktop-large = 800px+ $content-desktop-large = 1000px- $content-desktop-largest = 900px+ $content-desktop-largest = 1000px 修改小型代码块颜色themes\next\source\css\_variables\base.styl 12345678- $code-foreground = $black-light;+ $code-foreground = $my-code-foreground;- $code-background = $gainsboro;+ $code-background = $my-code-background;// 自定义的颜色+ $my-code-foreground = #dd0055 // 用``围出的代码块字体颜色+ $my-code-background = #eee // 用``围出的代码块背景颜色 修改themes\next\source\css\_custom\custom.styl，加入自定义样式 12345// 文章``代码块的自定义样式code &#123; margin: 0px 3px; border: 1px solid #999;&#125; 修改链接文字样式themes\next\source\css\_custom\custom.styl 123456789101112//文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; [Read More]按钮样式12345678910111213141516171819// [Read More]按钮样式.post-button .btn &#123; color: #555 !important; background-color: rgb(255, 255, 255); border-radius: 3px; font-size: 15px; box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35); border: none !important; transition-property: unset; padding: 0px 15px;&#125;.post-button .btn:hover &#123; color: rgb(255, 255, 255) !important; border-radius: 3px; font-size: 15px; box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35); background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);&#125; 网易云音乐外链1234&lt;div class="sidebar-inner"&gt;......&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=332 height=86 src="//music.163.com/outchain/player?type=2&amp;id=22842399&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt;&lt;/div&gt; 修改旋转头像themes\next\source\css\_common\components\sidebar\sidebar-author.styl 12345678910111213141516171819.site-author-image &#123; border: $site-author-image-border-width solid $site-author-image-border-color; display: block; height: $site-author-image-height; margin: 0 auto; max-width: $site-author-image-width; padding: $site-author-image-padding;+ //设置圆形+ border-radius: 50%;+ transition: 2s all; if (hexo-config('avatar.rounded')) &#123; border-radius: 50%; &#125;&#125;+//旋转+.site-author-image:hover&#123;+ transform: rotate(360deg);+&#125; 文章只显示预览 修改主题配置文件中的auto_excerpt1234auto_excerpt:- enable: false+ enable: true length: 150 友情链接在主题配置文件中搜索关键字 Blog rolls,添加自己需要的链接 1234links: #Title: http://example.com baidu: https://www.baidu.com/ google: https://www.google.com/ 本地搜索在Hexo的根目录下执行以下命令。 1npm install hexo-generator-searchdb --save 打开主题配置文件,搜索关键字local_search,将enable的值设置为 true 1234# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: true 修改hexo/_config.yml站点配置文件,末尾新增以下代码: 123456# 本地搜索search: path: search.xml field: post format: html limit: 10000 一九年八月十六日添加RSS在Hexo根目录执行安装指令，安装 hexo-generator-feed 插件 1npm install hexo-generator-feed --save 打开站点配置文件，追加feed信息 1234567# 设置RSSfeed: type: rss2 path: rss2.html limit: 5 hub: content: 'true' 打开主题配置文件，找到rss，设置为 1rss: /atom.xml 添加社交链接在主题配置文件中，找到social属性，添加社交链接，步骤如下 12345social: E-Mail: mailto:yourname@gmail.com || envelope Google: https://plus.google.com/yourname || google Twitter: https://twitter.com/yourname || twitter Facebook: https://www.facebook.com/yourname || facebook 格式为： 社交平台名称：链接 设置代码高亮在站点配置文件中，搜索highlight关键词 12345highlight: enable: true line_number: true auto_detect: true tab_replace: 文字自动检测默认不启动，改成true使其起作用。 再到主题配置文件，搜索highlight_theme关键词，修改代码主题样式 1234# Code Highlight theme# Available values: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: night 添加复制按钮在主题配置文件中，搜索关键词codeblock，将copy_button的enable值修改为true 1234567codeblock: # Manual define the border radius in codeblock # Leave it empty for the default 1 border_radius: # Add copy button on codeblock copy_button: enable: true 添加阅读次数统计主题配置文件中，搜索关键词busuanzi_count，设置文章阅读次数统计及网站访客量 12345678910# Show Views/Visitors of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzibusuanzi_count: enable: true total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye 添加 README.md每个项目README.md文件可以简单说明这个项目的用途。在Hexo目录下的 source 根目录下添加一个 README.md 文件，修改站点配置文件，将 skip_render 参数的值设置为 1skip_render: README.md 再次使用hexo d命令部署博客的时候就不会在渲染 README.md 这个文件。 自定义网站头像自定义头像可以使用比特虫网站制作 将图片的.png格式放在themes/next/source/images 在主题配置文件中，按以下修改 1234567favicon: small: /images/favicon-16x16-next.png #你的头像名称 medium: /images/favicon-32x32-next.png #你的头像名称 apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml 改为 12345678favicon: small: /images/favicon_op_16.png medium: /images/favicon_op_32.png apple_touch_icon: /images/op.jpeg # safari_pinned_tab: /images/logo.svg # safari_pinned_tab: /images/op.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml jpeg转svg文件 开启版权声明打开主题配置文件,搜索关键字 creative_commons , post 改为 true 12345creative_commons: license: by-nc-sa sidebar: false post: true language: 优化urlseo搜索引擎优化认为，网站的最佳结构是三层，但是默认hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，url不利于搜索引擎搜索。因此，我们可以将url直接改成sitename/blog/title的形式，同时title最好是用英文，在站点配置文件搜索permalink关键词，并修改如下 1234url: https://chloneda.github.io/root: /permalink: /blog/:title.htmlpermalink_defaults: 修改标签云(tagcloud)颜色修改themes/next/layout/page.swig文件，加入自定义样式修改对应参数值即可，参数说明见Hexo官方文档 12- &#123;&#123; tagcloud(&#123;min_font: 12, max_font: 30, amount: 200, color: true, start_color: '#ccc', end_color: '#111'&#125;) &#125;&#125;+ &#123;&#123; tagcloud(&#123;min_font: 13, max_font: 31, amount: 1000, color: true, start_color: '#9733EE', end_color: '#FF512F'&#125;) &#125;&#125; 修改文章底部#号标签,改为图标12345修改模板/themes/next/layout/_macro/post.swig，搜索 rel="tag"&gt;#，将 # 换成&lt;i class="fa fa-tag"&gt;&lt;/i&gt;&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 隐藏底部”强力驱动”内容1234567891011121314151617181920212223242526272829303132333435修改themes/next/_config.yml文件,将powered和enable设置为falsefooter: # Specify the date when the site was setup. If not defined, current year will be used. since: 2019 # Icon between year and copyright info. icon: # Icon name in Font Awesome. See: https://fontawesome.com/v4.7.0/icons/ # `heart` is recommended with animation in red (#ff0000). name: user # If you want to animate the icon, set it to true. animated: false # Change the color of icon, using Hex Code. color: "#808080" # If not defined, `author` from Hexo `_config.yml` will be used. copyright: powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # Beian ICP information for Chinese users. See: http://www.beian.miit.gov.cn beian: enable: false icp: 文章末尾添加”本文结束”标记123456修改在themes/next/layout/_macro/post.swig中，在wechat-subscriber.swig之前添加如下代码+ &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;---------------- The End ----------------&lt;/div&gt; &#123;%- if theme.wechat_subscriber.enable %&#125; &#123;&#123; partial('../_partials/post/wechat-subscriber.swig', &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125; &#123;%- endif %&#125; 移动端显示 back-to-top 按钮和侧栏具体手机显示可用手机访问我的博客 1234修改主题配置themes/next/_config.yml# Enable sidebar on narrow viewonmobile: true 设置动态titlethemes/next/source/js/src 下创建 dytitle.js 12345678910111213141516var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="shortcut icon"]').attr('href', "/TEP.png"); document.title = 'w(ﾟДﾟ)w 出BUG啦！！！！'; clearTimeout(titleTime); &#125; else &#123; $('[rel="shortcut icon"]').attr('href', "/favicon.png"); document.title = '♪(^∇^*)又好了。。。 ' + OriginTitile; titleTime = setTimeout(function () &#123; document.title = OriginTitile; &#125;, 2000); &#125;&#125;); 修改themes/next/layout/layout.swing,在 之前添加： 1&lt;script type="text/javascript" src="/js/src/dytitle.js"&gt;&lt;/script&gt; 侧栏加入已运行的时间 未完成123修改文件:themes/next/layout/_custom/sidebar.swig，加入一下代码BirthDay=new Date("05/27/2017 15:13:14"); 日期修改为自己的 1234567891011121314151617181920212223242526&lt;div id="days"&gt;&lt;/div&gt;&lt;script&gt;function show_date_time()&#123;window.setTimeout("show_date_time()"， 1000);BirthDay=new Date("05/27/2017 15:13:14");today=new Date();timeold=(today.getTime()-BirthDay.getTime());sectimeold=timeold/1000secondsold=Math.floor(sectimeold);msPerDay=24*60*60*1000e_daysold=timeold/msPerDaydaysold=Math.floor(e_daysold);e_hrsold=(e_daysold-daysold)*24;hrsold=setzero(Math.floor(e_hrsold));e_minsold=(e_hrsold-hrsold)*60;minsold=setzero(Math.floor((e_hrsold-hrsold)*60));seconds=setzero(Math.floor((e_minsold-minsold)*60));document.getElementById('days').innerHTML="已运行"+daysold+"天"+hrsold+"小时"+minsold+"分"+seconds+"秒";&#125;function setzero(i)&#123;if (i&lt;10)&#123;i="0" + i&#125;;return i;&#125;show_date_time();&lt;/script&gt; 在themes/next/layout/_macro/sidebar.swig中的&lt;/section&gt;之前添加 1&#123;% include '../_custom/sidebar.swig' %&#125; 样式: 12345678themes/next/source/css/_custom/custom.styl// 自定义的侧栏时间样式#days &#123; display: block; color: #fffa74; font-size: 14px; margin-top: 15px;&#125; 点击出现爱心效果在/themes/next/source/js/love.js下新建文件love.js，接着把该链接下的代码拷贝粘贴到love.js文件中 1!function (e, t, a) &#123; function n() &#123; c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++)d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y-- , d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n() &#125;(window, document); 在\themes\next\layout\_layout.swig文件末尾添加： 12345&#123;% include '_third-party/exturl.swig' %&#125;&lt;/body&gt;&lt;/html&gt;+ &lt;!-- 页面点击小红心 --&gt;+ &lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 增加内容分享服务详细参考theme-next-needmoreshare2,CDN是？ 修改themes/next/_config.yml主题配置文件，搜索关键字needmoreshare2，找到如下代码并做以下修改: 1234567891011121314151617# 文章分享功能needmoreshare2: enable: true postbottom: enable: true options: iconStyle: default boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook float: enable: true options: iconStyle: default boxForm: vertical position: topRight networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook 增加文章字数统计及阅读时常功能最终参考hexo-symbols-count-time 安装插件hexo-wordcount,执行以下命令: 1npm install hexo-wordcount --save 修改themes/next/_config.yml主题配置文件，搜索关键字post_wordcount,修改如下: 123456post_wordcount: item_text: true wordcount: true #单篇文章字数 min2read: true #单篇阅读时长 totalcount: true #站点总字数 separated_meta: true ~~ 博客静态资源压缩优化用hexo生成静态文件时，默认生成的静态文件存在大量空白，而且css、js都未经压缩，这在一定程度上会影响页面的加载，所以在网上所搜有没有办法来优化这些问题？ 答案肯定是有，当然大部分博客都提到了使用gulp来精简代码，而我今天所要跟大家介绍的是hexo-neat插件 。我为啥不选择gulp而使用hexo-neat呢？因为用gulp需要在每次生成静态文件后，即hexo g后，都要另外执行gulp命令才能压缩静态文件；而使用hexo-neat则无须另外执行其他命令即可自动完成压缩功能，即方便了使用习惯。 在站点的根目录下执行以下命令： 1npm install hexo-neat --save 打开blog/_config.yml全局配置文件添加如下配置： 1234567891011121314151617181920212223#静态资源压缩优化# hexo-neatneat_enable: true # 启用neat# 对html优化neat_html: enable: true exclude: # 对css优化neat_css: enable: true exclude: - '*.min.css'# 对js优化neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js' 看板娘 live2d详细信息: https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md 安装依赖: 12npm install --save hexo-helper-live2dnpm install --save live2d-widget-model-wanko 站点配置添加: 1234567891011121314151617181920212223242526# hexo-helper-live2d配置, 参考https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.mdlive2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-shizuku display: # superSample: 2 # 超采样等级 width: 150 height: 300 position: right # 位置 hOffset: 80 mobile: show: true react: opacity: 0.7 # opacityDefault: 0.6 # 默认透明度 # opacityOnHover: 0.5 # 鼠标移上透明度 dialog: # Display dialog 显示人物对话框 enable: true hitokoto: true # 使用一言API 页jio心跳参考 12345678910111213footer: # Specify the date when the site was setup. If not defined, current year will be used. since: 2019 # Icon between year and copyright info. icon: # Icon name in Font Awesome. See: https://fontawesome.com/v4.7.0/icons/ # `heart` is recommended with animation in red (#ff0000). name: heart # If you want to animate the icon, set it to true. animated: true # Change the color of icon, using Hex Code. color: "＃ff0000" 一九年八月十七日文章模板功能及写作样式 文章模板功能主要用于通过命令新建文章时，初始化文章设置，参见 Hexo 官方文档的Front-matter 和页面变量，总结如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107/* ！！！！！！！！！！** 每一项的 : 后面均有一个空格** 且 : 为英文符号** ！！！！！！！！！！*/title:/* 文章标题，可以为中文 */date:/* 建立日期，如果自己手动添加，请按固定格式** 就算不写，页面每篇文章顶部的发表于……也能显示** 只要在主题配置文件中，配置了 created_at 就行** 那为什么还要自己加上？** 自定义文章发布的时间*/updated:/* 更新日期，其它与上面的建立日期类似** 不过在页面每篇文章顶部，是更新于……** 在主题配置文件中，是 updated_at*/permalink:/* 若站点配置文件下的 permalink 配置了 title** 则可以替换文章 URL 里面的 title（文章标题）*/categories:/* 分类，支持多级，比如：- technology- computer- computer-aided-art则为technology/computer/computer-aided-art（不适用于 layout: page）*/tags:/* 标签** 多个可以这样写[标签1,标签2,标签3]** （不适用于 layout: page）*/description:/* 文章的描述，在每篇文章标题下方显示** 并且作为网页的 description 元数据** 如果不写，则自动取 &lt;!-- more --&gt;** 之前的文字作为网页的 description 元数据** 建议每篇文章都务必加上！*/keywords:/* 关键字，并且作为网页的 keywords 元数据** 如果不写，则自动取 tags 里的项** 作为网页的 keywords 元数据*/comments:/* 是否开启评论** 默认值是 true** 要关闭写 false*/layout:/* 页面布局，默认值是 post，默认值可以在** 站点配置文件中修改 default_layout** 另：404 页面可能用到，将其值改为 false*/type:/* categories，目录页面** tags，标签页面** picture，用来生成 group-pictures** quote？** https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/photos:/* Gallery support，用来支持画廊 / 相册，用法如下：- photo_url_1- photo_url_2- photo_url_3https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/link:/* 文章的外部链接** https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/image:/* 自定义的文章摘要图片，只在页面展示，文章内消失** 此项只有参考本文 5.14 节配置好，否则请勿添加！*/sticky:/* 文章置顶** 此项只有参考本文 5.15 节配置好，否则请勿添加！*/password:/* 文章密码，此项只有参考教程：** http://shenzekun.cn/hexo的next主题个性化配置教程.html** 第 24 节，配置好，否则请勿添加！** 发现还是有 bug 的，就是右键在新标签中打开** 然后无论是否输入密码，都能看到内容*/ 参考模板 123456789101112131415161718192021---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;permalink:categories:tags: []description:image:---&lt;img src="https://" alt="" style="width:100%" /&gt;&lt;!-- more --&gt;######&lt;hr /&gt; 好玩的写作样式先在themes/next/source/css/_custom/custom.styl中添加以下样式： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231// 按钮样式（为emoji特设）.btn &#123; color: #fff !important; text-decoration: none !important; border: 2px solid #222 !important;&#125;.btn:hover &#123; color: #222 !important;&#125;// 下载样式a#download &#123;display: inline-block;padding: 0 10px;color: #000;background: transparent;border: 2px solid #000;border-radius: 2px;transition: all .5s ease;font-weight: bold;&amp;:hover &#123;background: #000;color: #fff;&#125;&#125;/ /颜色块-黄span#inline-yellow &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #f0ad4e;&#125;// 颜色块-绿span#inline-green &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #5cb85c;&#125;// 颜色块-蓝span#inline-blue &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #2780e3;&#125;// 颜色块-紫span#inline-purple &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #9954bb;&#125;// 左侧边框红色块级p#div-border-left-red &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-left-width: 5px;border-radius: 3px;border-left-color: #df3e3e;&#125;// 左侧边框黄色块级p#div-border-left-yellow &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-left-width: 5px;border-radius: 3px;border-left-color: #f0ad4e;&#125;// 左侧边框绿色块级p#div-border-left-green &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-left-width: 5px;border-radius: 3px;border-left-color: #5cb85c;&#125;// 左侧边框蓝色块级p#div-border-left-blue &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-left-width: 5px;border-radius: 3px;border-left-color: #2780e3;&#125;// 左侧边框紫色块级p#div-border-left-purple &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-left-width: 5px;border-radius: 3px;border-left-color: #9954bb;&#125;// 右侧边框红色块级p#div-border-right-red &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-right-width: 5px;border-radius: 3px;border-right-color: #df3e3e;&#125;// 右侧边框黄色块级p#div-border-right-yellow &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-right-width: 5px;border-radius: 3px;border-right-color: #f0ad4e;&#125;// 右侧边框绿色块级p#div-border-right-green &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-right-width: 5px;border-radius: 3px;border-right-color: #5cb85c;&#125;// 右侧边框蓝色块级p#div-border-right-blue &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-right-width: 5px;border-radius: 3px;border-right-color: #2780e3;&#125;// 右侧边框紫色块级p#div-border-right-purple &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-right-width: 5px;border-radius: 3px;border-right-color: #9954bb;&#125;// 上侧边框红色p#div-border-top-red &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-top-width: 5px;border-radius: 3px;border-top-color: #df3e3e;&#125;// 上侧边框黄色p#div-border-top-yellow &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-top-width: 5px;border-radius: 3px;border-top-color: #f0ad4e;&#125;// 上侧边框绿色p#div-border-top-green &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-top-width: 5px;border-radius: 3px;border-top-color: #5cb85c;&#125;// 上侧边框蓝色p#div-border-top-blue &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-top-width: 5px;border-radius: 3px;border-top-color: #2780e3;&#125;// 上侧边框紫色p#div-border-top-purple &#123;display: block;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-top-width: 5px;border-radius: 3px;border-top-color: #9954bb;&#125; 添加注脚安装插件： 1npm install hexo-reference --save 用法如下： 1this is a basic footnote[/^1] ##用的时候把/去掉 在文章末尾添加： 1[/^1]: basic footnote content ##用的时候把/去掉 this is a basic footnote[1] 文字增加背景色块站点配置文件，主题配置文件 12&lt;span id="inline-blue"&gt;站点配置文件&lt;/span&gt;， &lt;span id="inline-purple"&gt;主题配置文件&lt;/span&gt; 引用边框变色如果没有安装成功，那可能就是墙的原因。建议下载 Node.js 直接安装。 关于更多基本操作和基础知识，请查阅 Hexo 与 NexT 官方文档. 12&lt;p id="div-border-left-red"&gt;如果没有安装成功，那可能就是墙的原因。建议下载 `Node.js` 直接安装。&lt;/p&gt;&lt;p id="div-border-top-blue"&gt;关于更多基本操作和基础知识，请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](htt 主题自带样式NexT 主题自带的标签样式，请点击：http://theme-next.iissnan.com/tag-plugins.html 文本居中引用人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！ 123456&#123;% cq %&#125;人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！&#123;% endcq %&#125; 引用块效果: Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake 代码: 123&#123;% blockquote David Levithan, Wide Awake %&#125;Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.&#123;% endblockquote %&#125; 效果: NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 代码: 123&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;NEW: DevDocs now comes with syntax highlighting. http://devdocs.io&#123;% endblockquote %&#125; 主题自带样式note标签default 1&lt;div class="note default"&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt; primary 1&lt;div class="note primary"&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt; success 1&lt;div class="note success"&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt; info 1&lt;div class="note info"&gt;&lt;p&gt;info&lt;/p&gt;&lt;/div&gt; warning 1&lt;div class="note warning"&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt; danger 1&lt;div class="note danger"&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt; danger no-icon 1&lt;div class="note danger no-icon"&gt;&lt;p&gt;danger no-icon&lt;/p&gt;&lt;/div&gt; 可以在 主题配置文件 中需要配置下: 123456789# Note tag (bs-callout).note: # 风格 style: flat # 要不要图标 icons: true # 圆角矩形 border_radius: 3 light_bg_offset: 主题自带样式 label 标签可以在 主题配置文件 中需要配置下: 12# Label tag.label: true 效果如下（@ 前面的是label的名字，后面的是要显示的文字）： default 1&#123;% label default@default %&#125; 可以将default换成primary，success，info，warning，danger，试试效果吧！ 主题自带样式 tabs 标签可以在 主题配置文件 中需要配置下: 1234567# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 0 源码: 1234567891011&#123;% tabs 选项卡, 2 %&#125;&lt;!-- tab --&gt;**这是选项卡 1** 呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈……&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 2**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 3** 哇，你找到我了！φ(≧ω≦*)♪～&lt;!-- endtab --&gt;&#123;% endtabs %&#125; 说明:源码中, 2表示一开始在第二个选项卡，非必须，若数值为-1则隐藏选项卡内容。更多用法请查看这个页面 主题自带样式 按钮源码： 1&#123;% btn https://www.baidu.com, 点击下载百度, download fa-lg fa-fw %&#125; 效果: 点击下载百度 关于按钮的更多使用可以前往这个页面查看。 12&lt;a id="download" href="https://git-scm.com/download/win"&gt;&lt;i class="fa fa-download"&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;&lt;/a&gt; 效果: Download Now 这也是调用了Font Awesome的方法。 在文档中增加图标支持MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。一件部署只需一条指令即可部署到Github Pages，或其他网站丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 123456- &lt;i class="fa fa-pencil"&gt;&lt;/i&gt;支持Markdown&lt;i&gt;Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/i&gt;- &lt;i class="fa fa-cloud-upload"&gt;&lt;/i&gt;一件部署&lt;i&gt;只需一条指令即可部署到Github Pages，或其他网站&lt;/i&gt;- &lt;i class="fa fa-cog"&gt;&lt;/i&gt;丰富的插件&lt;i&gt;Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;/i&gt; 123&lt;i class="fa fa-github"&gt;&lt;/i&gt;&lt;i class="fa fa-github fa-lg"&gt;&lt;/i&gt;&lt;i class="fa fa-github fa-2x"&gt;&lt;/i&gt; 采用的是Font Awesome的图标 自定义样式引用需加入themes/next/source/css/_custom/custom.styl的代码： 123456789// 自定义的引用样式blockquote.question &#123; color: #555;#颜色 border-left: 4px solid rgb(16, 152, 173);#边框粗细 background-color: rgb(227, 242, 253);#背景色 border-top-right-radius: 3px; border-bottom-right-radius: 3px; margin-bottom: 20px;&#125; 效果： 内容 1&lt;blockquote class="question"&gt;内容&lt;/blockquote&gt; 自定义样式 数字块需加入themes/next/source/css/_custom/custom.styl的代码： 12345678910// 自定义的数字块span#inline-toc &#123; display: inline-block; border-radius: 80% 100% 90% 20%; background-color: rgb(227, 242, 253); color: #555; padding: 0.05em 0.4em; margin: 2px 5px 2px 0px; line-height: 1.5;&#125; 效果：1. 1&lt;span id="inline-toc"&gt;1.&lt;/span&gt; 参考：https://qianling.pw/style/#TOC数字块 为next主题的主页文章添加阴影效果打开themes/next/source/css/_custom/custom.styl文件添加: 1234567.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 站点加速更改默认Google字体库访问系统总是会耗费一大部分的时间在加载google字体库上, 而且经常加载不成功 方法一: 用国内的CDN库来替代主题中的google字体库, 到主题配置文件中设置默认字体库: 1host: fonts.useso.com 方法二: 关掉字体库的引用, 默认加载本地字体库, 到主题配置文件设置: 12font: enable: false 文章摘要图片俗话说：「图文并茂」，现实中用笔书写文章实现起来比较困难，但在博客上可以很轻松实现😎。首先，文章摘要（excerpt）是指每篇文章（post）在页面（page）上显示的那部分内容，也就是 [Read More] 之前的文章内容。由于它会展示在页面，因此在每篇文章的文章摘要中加一张图片，页面看起来就很美观。但是有时候可能会出现一个问题：你想从文章中选一张图片作为文章摘要图片，而这张图片由于写作要求，必须添加在文章的末尾，这样点 [Read More] 查看文章时，这张图片就会重复出现了。咋办？ 前提是在主题配置文件中： 12345文件位置：~/blog/themes/next/_config.ymlexcerpt_description: falseauto_excerpt: enable: false 首先加代码： 12345678910111213141516171819202122232425262728文件位置：~/blog/themes/next/layout/_macro/post.swig &#123;% if is_index %&#125; &#123;% if post.description and theme.excerpt_description %&#125; &#123;&#123; post.description &#125;&#125; &lt;!--noindex--&gt; &lt;div class="post-button text-center"&gt; &lt;a class="btn" href="&#123;&#123; url_for(post.path) &#125;&#125;"&gt; &#123;&#123; __('post.read_more') &#125;&#125; &amp;raquo; &lt;/a&gt; &lt;/div&gt; &lt;!--/noindex--&gt; &#123;% elif post.excerpt %&#125; &#123;&#123; post.excerpt &#125;&#125;+ + &#123;% if post.image %&#125;+ &lt;div class="out-img-topic"&gt;+ &lt;img src=&#123;&#123; post.image &#125;&#125; class="img-topic" /&gt;+ &lt;/div&gt;+ &#123;% endif %&#125;+ &lt;!--noindex--&gt; &lt;div class="post-button text-center"&gt; &lt;a class="btn" href="&#123;&#123; url_for(post.path) &#125;&#125;&#123;% if theme.scroll_to_more %&#125;#&#123;&#123; __('post.more') &#125;&#125;&#123;% endif %&#125;" rel="contents"&gt; &#123;&#123; __('post.read_more') &#125;&#125; &amp;raquo; &lt;/a&gt; &lt;/div&gt; &lt;!--/noindex--&gt; 为了防止有的图片宽度不够导致风格不够统一，页面不美观，需要在custom.styl中加入： 12345文件位置：~/blog/themes/next/source/css/_custom/custom.styl// 自定义的文章摘要图片样式img.img-topic &#123; width: 100%;&#125; 最后编辑有这需求的相关文章时，在Front-matter文件最上方以—分隔的区域）加上一行： 1image: url url即图片的链接地址～ 参考： issue：https://github.com/iissnan/hexo-theme-next/issues/1190文章：http://wellliu.com/2016/12/30/【转】Blog摘要配图/ 未添加功能 custom.styl样式文件更新于:18-10-18// Custom styles./*******************首页样式*****************************/// 顶栏宽度.container .header-inner &#123; width: 100%;&#125;// .headband &#123;// height: 1.5px;// background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);// &#125;// 页面顶部行高.header &#123; line-height: 1.5;&#125;// // 页面背景色// .container &#123;// background-color: rgba(0, 0, 0, 0.75);// &#125;// 页面留白更改.header-inner &#123; padding-top: 35px; padding-bottom: 0px;&#125;.posts-expand &#123; padding-top: 50px;&#125;.posts-expand .post-meta &#123; margin: 5px 0px 0px 0px;&#125;.post-button &#123; margin-top: 0px;&#125;// 顶栏宽度.container .header-inner &#123; width: 100%;&#125;// 渐变菜带，CSS代码copy自https://githubuniverse.com// .site-meta &#123;// background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);// &#125;//缩略图指定宽度值显示。img.img-topic &#123; width: 75%;&#125;/*******************文章样式*****************************/// 文章.post &#123; margin-bottom: 50px; padding: 45px 36px 36px 36px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(255, 255, 255);&#125;// 文章标题字体.posts-expand .post-title &#123; font-size: 26px; font-weight: 700;&#125;// 文章标题动态效果.posts-expand .post-title-link::before &#123; background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);&#125;// 文章元数据（meta）留白更改.posts-expand .post-meta &#123; margin: 10px 0px 20px 0px;&#125;// 文章的描述description.posts-expand .post-meta .post-description &#123; font-style: italic; font-size: 14px; margin-top: 30px; margin-bottom: 0px; color: #666;&#125;// [Read More]按钮样式.post-button .btn &#123; color: #555 !important; background-color: rgb(255, 255, 255); border-radius: 3px; font-size: 15px; box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35); border: none !important; transition-property: unset; padding: 0px 15px;&#125;.post-button .btn:hover &#123; color: rgb(255, 255, 255) !important; border-radius: 3px; font-size: 15px; box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35); background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);&#125;// 去除在页面文章之间的分割线.posts-expand .post-eof &#123; margin: 0px; background-color: rgba(255, 255, 255, 0);&#125;// 去除页面底部页码上面的横线.pagination &#123; border: none; margin: 0px;&#125;// 文章内标题样式（左边的竖线）.post-body h2, h3, h4, h5, h6 &#123; border-left: 4px solid rgb(161, 102, 171); margin-left: -36px; padding-left: 32px;&#125;// 去掉图片边框.posts-expand .post-body img &#123; border: none; padding: 0px;&#125;// 文章``代码块的自定义样式code &#123; margin: 0px 3px; border: 1px solid #999;&#125;// 文章```代码块顶部样式.highlight figcaption &#123; margin: 0em; padding: 0.5em; background: #eee; border-bottom: 1px solid #e9e9e9;&#125;.highlight figcaption a &#123; color: rgb(80, 115, 184);&#125;// 文章```代码块diff样式pre .addition &#123; background: #e6ffed;&#125;pre .deletion &#123; background: #ffeef0;&#125;//文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125;// 自定义的文章摘要图片样式img.img-topic &#123; width: 100%;&#125;/*************************侧栏样式****************************/// 自定义的侧栏时间样式#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125;// 右下角侧栏按钮样式.sidebar-toggle &#123; right: 10px; bottom: 43px; background-color: rgba(247, 149, 51, 0.75); border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.page-post-detail .sidebar-toggle-line &#123; background: rgb(7, 179, 155);&#125;// 右下角返回顶部按钮样式.back-to-top &#123; line-height: 1.5; right: 10px; padding-right: 5px; padding-left: 5px; padding-top: 2.5px; padding-bottom: 2.5px; background-color: rgba(247, 149, 51, 0.75); border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;// 侧栏.sidebar &#123; box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgba(0, 0, 0, 0.75);&#125;.sidebar-inner &#123; margin-top: 30px;&#125;// 侧栏顶部文字.sidebar-nav li &#123; font-size: 15px; font-weight: bold; color: rgb(7, 179, 155);&#125;.sidebar-nav li:hover &#123; color: rgb(161, 102, 171);&#125;.sidebar-nav .sidebar-nav-active &#123; color: rgb(7, 179, 155); border-bottom-color: rgb(161, 102, 171); border-bottom-width: 1.5px;&#125;.sidebar-nav .sidebar-nav-active:hover &#123; color: rgb(7, 179, 155);&#125;// 侧栏站点作者名.site-author-name &#123; display: none;&#125;// 侧栏站点描述.site-description &#123; letter-spacing: 5px; font-size: 15px; font-weight: bold; margin-top: 15px; margin-left: 13px; color: rgb(243, 112, 85);&#125;// 侧栏站点文章、分类、标签.site-state &#123; line-height: 1.3; margin-left: 12px;&#125;.site-state-item &#123; padding: 0px 15px; border-left: 1.5px solid rgb(161, 102, 171);&#125;// 侧栏RSS按钮样式.feed-link &#123; margin-top: 15px; margin-left: 7px;&#125;.feed-link a &#123; color: rgb(255, 255, 255); border: 1px solid rgb(158, 158, 158) !important; border-radius: 15px;&#125;.feed-link a:hover &#123; background-color: rgb(161, 102, 171);&#125;.feed-link a i &#123; color: rgb(255, 255, 255);&#125;// 侧栏社交链接.links-of-author &#123; margin-top: 0px;&#125;// 侧栏友链标题.links-of-blogroll-title &#123; margin-bottom: 10px; margin-top: 15px; color: rgba(7, 179, 155, 0.75); margin-left: 6px; font-size: 15px; font-weight: bold;&#125;// 侧栏超链接样式（友链的样式）.sidebar a &#123; color: #ccc; border-bottom: none;&#125;.sidebar a:hover &#123; color: rgb(255, 255, 255);&#125;// 自定义的侧栏时间样式#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125;// 侧栏目录链接样式.post-toc ol a &#123; color: rgb(7, 179, 155); border-bottom: 1px solid rgb(96, 125, 139);&#125;.post-toc ol a:hover &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;// 侧栏目录链接样式之当前目录.post-toc .nav .active &gt; a &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;.post-toc .nav .active &gt; a:hover &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;/* 修侧栏目录bug，如果主题配置文件_config.yml的toc是wrap: true */.post-toc ol &#123; padding: 0px 10px 5px 10px;&#125;/* 侧栏目录默认全展开，已注释.post-toc .nav .nav-child &#123; display: block;&#125;*//************************移动端样式*******************************/@media (max-width: 1023px) &#123; .container &#123; background-color: rgba(0, 0, 0, 0); &#125; .sidebar &#123; // box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); border-top-left-radius: 5px; border-bottom-left-radius: 5px; &#125; .feed-link &#123; display: none !important; &#125;&#125;@media (max-width: 767px) &#123; .main &#123; padding-bottom: 120px; &#125; .posts-expand &#123; margin: 0px; padding-top: 10px; &#125; .posts-expand .post-title &#123; font-size: 22px; &#125; .posts-expand .post-meta &#123; font-size: 10px; &#125; .post &#123; margin-bottom: 30px !important; padding: 20px 15px 15px 15px !important; &#125; .post-body h2, h3, h4, h5, h6 &#123; margin-left: -15px; padding-left: 11px; &#125; .posts-expand .post-tags &#123; margin-top: 10px; &#125; .post-widgets &#123; margin-top: 10px; &#125; .comments &#123; margin: 40px 0px 40px 0px !important; &#125; .footer &#123; // box-shadow: 0px -5px 10px 0px rgba(0, 0, 0, 0.5); &#125;&#125;.sidebar-active #sidebar-dimmer &#123; opacity: 0;&#125;// 移动端左上角菜单按钮.site-nav-toggle &#123; top: 35px; left: 91px; // background-color: #222;&#125;.btn-bar &#123; background-color: rgb(255, 255, 255);&#125;// 移动端菜单@media (max-width: 767px) &#123; .menu &#123; text-align: center; // box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5); &#125; .site-nav &#123; top: initial; background-color: rgba(255, 255, 255, 0.75); border-top: none; border-bottom: none; position: relative; z-index: 1024; &#125;&#125;//移动端顶部@media (max-width: 767px) &#123; .site-title &#123; font-size: 28px !important; letter-spacing: 0px !important; &#125; .site-subtitle&#123; letter-spacing: 0px !important; padding-bottom: 0px !important; &#125; .site-meta &#123; // box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5); &#125; .menu .menu-item &#123; margin: 0px 10px !important; &#125;&#125; 添加背景图片通过jquery-backstretch，具体操作呢，编辑文件/themes/next/layout/_layout.swig： 12345+ &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js"&gt;&lt;/script&gt;;+ &lt;script&gt;+ $("body").backstretch("https://背景图.jpg");+ &lt;/script&gt;&lt;/body&gt; 加入到文件最后面前面即可。 评论系统如果上面你已经注册了LeanCloud(没有注册的点这里,现在需要实名认证),那么只要把appid和appkey设置下即可,修改主题配置文件: 1234567891011121314# 评论系统# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: #your id appkey: #your key notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: Just go go # comment box placeholder avatar: mm # gravatar style guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size 二维码打赏得到二维码图片资源后，读者们可将二维码图片放到NexT根目录/source/images/文件夹下。开启打赏功能打开主题配置文件，搜索reward关键词，添加打赏的配置信息 12345678# Reward# If true, reward would be displayed in every article by default.# And you can show or hide one article specially through add page variable `reward: true/false`.reward: enable: true //默认是false，改为true comment: 您的支持是对我最大的鼓励 wechatpay: /images/wechatpay.jpg #图片链接或图片相对路径 alipay: /images/alipay.jpg #图片链接或图片相对路径 添加自定义页面[友链] 未添加设置菜单项的显示中文文本，打开themes/next/languages/zh-CN.yml文件,搜索 menu 关键字，修改对应中文或者新增 123456789101112menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 # schedule: 日程表 # sitemap: 站点地图 # commonweal: 公益404 # 新增menu links: 友链 # 新增该选项表示新增“友链”菜单 新增links菜单在主题配置文件，搜索menu，新增links: /links/ || link 123456789# 菜单示例配置menu: home: / || home reading: /reading/ || book archives: /archives/ || archive categories: /categories/ || th #tags: /tags/ || tags about: /about/ || user links: /links/ || link hexo根目录下，执行以下命令，新建友链页面 1hexo new page links 修改站点目录下source/links的 index.md 文件 123456---title: 友链tags: linkscategories: linkscomments: false--- 添加最近文章栏目修改themes/next/layout/_macro/sidebar.swig 。找到theme.social板块代码，在该板块最后的endif后隔一行添加如下代码。 123456789101112131415161718&#123;# recent posts #&#125;&#123;% if theme.recent_posts %&#125; &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts_layout &#125;&#125;"&gt; &lt;div class="links-of-blogroll-title"&gt; &lt;!-- modify icon to fire by szw --&gt; &lt;i class="fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt; &#123;&#123; theme.recent_posts_title &#125;&#125; &lt;/div&gt; &lt;ul class="links-of-blogroll-list"&gt; &#123;% set posts = site.posts.sort('-date') %&#125; &#123;% for post in posts.slice('0', '5') %&#125; &lt;li class="recent_posts_li"&gt; &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125; &lt;/ul&gt; &lt;/div&gt;&#123;% endif %&#125; 编辑themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl 12345678li.recent_posts_li &#123; text-align: cengter; display: block; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;&#125; 主题配置文件themes/next/_config.yml,添加如下代码 123recent_posts_title: 近期文章recent_posts_layout: blockrecent_posts: true 点击头像回到博客首页修改文件/themes/next/layout/_macro/sidebar.swig,增加以下代码: 12345+ &lt;a href="/"&gt; &lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt;+ &lt;/a&gt; 文章置顶功能移除默认安装的插件： 1npm uninstall hexo-generator-index --save 安装新插件: 1npm install hexo-generator-index-pin-top --save 最后编辑有这需求的相关文章时，在Front-matter（文件最上方以—分隔的区域）加上一行： 1top: true 如果你置顶了多篇，怎么控制顺序呢？设置top的值（大的在前面），比如： 1234567# Post a.mdtitle: atop: 1# Post b.mdtitle: btop: 10 文章 b 便会显示在文章 a 的前面。 文章底部添加打分系统超深度优化-5.6小节 123456# Star rating support to each article.# To get your ID visit https://widgetpack.comrating: enable: true id: 20399 # &lt;app_id&gt; color: fc6423 添加 TopX 页面超深度优化-5.8小节 参考 Github+Hexo一站式部署个人博客Hexo+NexT 打造一个炫酷博客–博客杂言非语chloneda的博客Hexo博客NexT主题美化之新增看板娘(能说话、能换装)live2d-plugin-2.0 博客已迁移eyhn的博客基于Hexo搭建个人博客——进阶篇(从入门到入土)hexo-helper-live2d中文文档L2Dwidget用户手册NexT主题升级 http://yangbingdong.com/2017/build-blog-hexo-advanced/https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.htmlhttp://www.ehcoo.com/seo.htmlhttps://www.qcmoke.site/hexo_next.htmlhttps://almostover.ru/2016-01/hexo-theme-next-test/#Tab-tag-testhttps://blog.csdn.net/u012443858/article/details/60812982https://blog.csdn.net/w_ngzeqi/article/details/73863543https://blog.csdn.net/sunshine940326/article/details/70936988https://lfwen.site/2016/05/31/add-count-for-hexo-next/]]></content>
      <tags>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Clover主题配置]]></title>
    <url>%2F%2Fblog%2FClover%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[在站点配置文件的theme更换主题名称即可切换博客主题，不影响之前一个主题的博客设置 zh-CN.yml 123456789categories: 分类tags: 标签archive_a: 归档archive_b: 归档：%spage: 第 %d 页category: 分类tag: 标签other_category: 其他links: 友链 _config.yml 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768# Custom navnav: title: "Joel Ying"favicon: ""# Custom backgroundbackground: color: "#eff0f6" image: ""# Social mediasocial: Dribbble: # https://dribbble.com/clovertuan Behance: # https://www.behance.net/clovertuan Lofter: # http://clovertuan.lofter.com/ Instagram: # https://www.instagram.com/clovertuan/ GitHub: https://github.com/joelYing# Custom footermail: 635328166@qq.comcopyright: All rights reserved @Joel Ying# Custom menu. You can specific the path or the card style (only useful for category page).# Two kinds of card style: 'project-card', 'article-card',# Never mind the name.menu: # Project: # path: /categories/Projects # card: project-card # Stuffs: # path: /tags/Stuffs # card: article-card home: / archives: /archives categories: /categories tags: /tags link: /links about: /about# Specific default categories or tags of home page.# Post which belongs to `category` or `tag` and don't belongs to `except_category` or `except_tag` will be filtered.home: # set card style of home page # category: Projects # tag: 算法 # except_category: 树 # except_tag: # - 总结 # - csscard_style: home: project-card archive: article-card tag: article-card category: article-card link: article-card about: article-card# category pagecategory_generator: category_per_page: 3 post_per_category: 3node_sass: outputStyle: nested precision: 5 sourceComments: false about-index.md 1234567---layout: abouttitle: aboutdate: 2019-08-12 14:52:23---Hi，这里是半个兴趣使然的程序员 category-index.md 12345---layout: categorytitle: categoriesdate: 2019-08-12 14:48:57--- links-index.md 123456789---title: linksdate: 2019-08-13 10:43:10---WeChat: yjl15822897030QQ: 635328166MyWeb: www.joelyings.comLearn From: https://clovertuan.github.io/ tag-index.md 12345---layout: tagtitle: tagsdate: 2019-08-12 14:44:58--- 效果图]]></content>
      <categories>
        <category>Clover</category>
      </categories>
      <tags>
        <tag>CloverConfig</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Github Pages基础版搭建攻略]]></title>
    <url>%2F%2Fblog%2FHexo%2BGithub%20Pages%E5%9F%BA%E7%A1%80%E7%89%88%E6%90%AD%E5%BB%BA%E6%94%BB%E7%95%A5.html</url>
    <content type="text"><![CDATA[引子 早就有想做一个个人博客的想法，想写些内容放进去，给自己提个醒，也想把过程分享给大家，所以一开始也在CSDN，简书上发了许多，但是没有一种真正的属于自己的空间的感觉 于是借此机会，正式尝试一下通过Hexo+GitHub来搭建一个个人博客，记录如下 概念 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页，详情可见官网Hexo也是GitHub上的开源项目 Github Pages这里我们用到了GitHub提供的GitHub Pages，完全免费、无须自己购买云服务搭建、支持多功能等，是GitHub Pages的优势之处，当然也会有一些限制，比如网站大小不能超过1GB等，但是综合来说GitHub Pages依旧是中小型博客或项目主页的最佳选项之一（参考一）当然GitHub Pages也是有着自己的主题，相对来说比较简单，所以官方推荐了使用Jekyll进行对博客的丰富但是这里我就尝试了用Node.js编写的Hexo来搭建，除此之外还有Go 编写的 Hugo，Python 编写的 Pelican，以及更人性化的 Gridea等 步骤 GitHub创建个人仓库 安装Git 安装Node.js 安装Hexo 将 GitHub Pages 和 Hexo 关联 使用图床 完成基础版搭建 GitHub创建个人仓库登录到GitHub，如果没有GitHub账号，注册一个GitHub账号，创建一个名为username.github.io的新存储库，其中username是你的用户名（或组织名称），如下图创建成功之后，你就能看到已经生成了这样的一个名称为‘’username.github.io’’的仓库 安装Git简单来说Git是开源的分布式版本控制系统，我们网站在本地搭建好了，需要使用Git将项目同步到GitHub上。如果想了解Git的细节，参考廖雪峰老师的Git教程，在Windows上使用Git，可以从Git官网直接下载安装程序，然后按默认选项安装即可 安装完成后，右键打开“Git Bash Here”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！ 在打开的窗口中输入命令设置user.name和user.email配置信息 12git config --global user.name "你的GitHub用户名"git config --global user.email "你的GitHub注册邮箱" 生成ssh密钥文件 1ssh-keygen -t rsa -C "你的GitHub注册邮箱" 然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制，.ssh文件一般在“C盘下\用户文件夹\管理员文件夹”下 打开GitHub&gt;Settings&gt;SSH and GPG keys页面，新建”New SSH Key”，Title为标题，随意填即可，将刚刚复制的id_rsa.pub内容复制进去，最后点击Add SSH key 在Git Bash中检测GitHub公钥设置是否成功，输入 1ssh git@github.com 如上则说明成功 这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的 安装Node.jsHexo基于Node.js，Node.js下载地址下载安装包，注意安装Node.js会包含环境变量及npm的安装，例如版本 10.16.2 (includes npm 6.9.0)，安装后 检测Node.js是否安装成功，重新打开Git Bash输入 1node -v 出现对应版本号即说明Node.js安装成功，检测npm是否安装成功 1npm -v 至此，安装Hexo的环境已经全部搭建完成 安装HexoHexo就是我们个人博客的框架，这里需要在自己的电脑里创建一个文件夹，这里我命名为HexoGP，Hexo框架与以后你自己发布的网站都在这个文件夹中，创建好后，进入文件夹中 -&gt; Git Bash Here -&gt; 使用npm命令安装Hexo 1npm install -g hexo-cli 安装完成后，初始化我们的博客，输入： 1hexo init HexoGP 这是HexoGP文件夹下生成的内容 public文件夹下包含有发表的博文及主要页面的HTML文件，source下是发表博文以及其他页面的内容的md文件，themes则是下载的主题文件 为了检测网站的雏形，分别按顺序输入一下三条命令（新建博客文章、生成网页、在本地预览）： 123hexo new testhexo ghexo s 完成后在浏览器输入: http://localhost:4000/，可以看到我们写出的第一篇博文test 这是在Hexo默认主题下的页面 Hexo常用命令 123npm install hexo -g #安装Hexonpm update hexo -g #升级 hexo init #初始化博客 命令简写 12345678910hexo n "我的博客" == hexo new "我的博客" #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 将 GitHub Pages 和 Hexo 关联在我的HexoGP根目录里_config.yml文件为站点配置文件，根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，打开站点配置文件_config.yml修改deploy: 1234deploy: type: git repository: https://github.com/joelYing/joelYing.github.io.git branch: master 保存站点配置，其实就是让hexo知道你要把Hexo部署在哪个位置，很明显，我们部署在我们GitHub仓库里，最后安装Git部署插件 1npm install hexo-deployer-git --save 红框中的出现是由于fsevent是mac系统的，在win或者Linux下使用了，所以会有警告，忽略即可 fsevent的作用是能够检测文件目录的修改，可以记录恶意软件的非法操作，获取恶意软件的完整路径，删除和修改日期 这时，我们分别再输入三条命令，即可在通过xxx.github.io看到我们的博客了 123hexo cleanhexo ghexo d 可能出现的问题在 hexo d 部署的时候 123456789101112131415$ hexo dINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...fatal: LF would be replaced by CRLF in 2019/08/11/hello-world/index.htmlFATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed at ChildProcess.&lt;anonymous&gt; (D:\HexoGithubPages\HexoGP\node_modules\hexo-util\lib\spawn.js:52:19) at ChildProcess.emit (events.js:198:13) at ChildProcess.cp.emit (D:\HexoGithubPages\HexoGP\node_modules\cross-spawn\lib\enoent.js:40:29) at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)fatal: LF would be replaced by CRLF in index.html 这时，需要在 HexoGP\.deploy_git\.git 目录下的config文件中添加 12autocrlf = falsesafecrlf = false Hexo个性化配置 更换主题Hexo提供了很多主题，我在大概浏览了近200多个主题后使用的是Clover主题，相对来说十分简洁，当然更多的可能会选择NexT主题，这个主题后续也会学习使用 在HexoGP目录（即自己创建博客的文件夹）中打开Git Bash，输入如下，下载Clover主题到HexoGP目录中themes下的clover文件夹中 1git clone https://github.com/esappear/hexo-theme-clover themes/clover 这是下载完成后clover文件夹下的内容，_config.yml就是主题配置文件 注意，若是下载NexT主题时，使用Clone with HTTPS下载到一半下载失败，实际上可能是因为项目太久，tag资源文件太大 1git clone https://github.com/iissnan/hexo-theme-next themes/next 可以尝试将https地址换成ssh地址来clone，如下，这样就可以成功下载 1git clone git@github.com:iissnan/hexo-theme-next.git themes/next 打开HexoGP文件夹下的_config.yml站点配置文件，将theme修改如下: 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: clover 再次部署网站，hexo g、hexo d，查看效果，就可以看到使用了Clover主题的页面 基础使用由于使用的是Clover主图，参考https://github.com/esappear/hexo-theme-clover 根据Readme上提示，还需 Add hexo-renderer-sass 1npm install hexo-renderer-sass --save Clover主题可以为文章添加概述以及图片等 以及添加新的页面 我们来新建一篇博文 1hexo new "Python爬取视频指南" 新建之后我们可以在HexoGP文件夹的source文件下的_posts文件夹下找到Python爬取视频指南.md，打开之后就可以用Markdown语法进行编辑 tags表示这篇文章属于Python标签，categories表示属于Python分类，excerpt表示概述的内容，photos就是文章的封面图片了 这里需要注意的是，最开始处的，无论是title后面，还是excerpt后面跟的冒号，都必须是英文的冒号 : ，而且冒号后面必须添加一个空格，否则在生成部署时会报错 其他的配置等等主要是在站点配置文件中修改站点基本信息，如网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等，以及Clover的主题配置文件中修改，另外再根据Readme中的描述就能初步完成，发表一篇博文啦 使用图床图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法完成图片的插入，这种网站就被成为图床 1![图片信息](外部链接) 这里介绍七牛云的使用方法，还有又拍云等大家可以自己尝试，注册实名认证七牛云账号就不过多赘述，实际添加图片可以参考七牛云存储添加自定义域名和域名解析图文教程 这里主要看一下华为云如何自定义域名 CNAME 解析，进入华为云控制台，域名注册服务，进入域名解析，选择其中的一个域名，点击解析 点击添加记录集 添加如下 其中，类型选择 CNAME；主机记录：主域名前面的部分，如image.joelyings.com，这里的主机记录就是 image；值就是七牛云域名信息中 CNAME 的值 image.joelyings.com.qiniudns.com 完成基础版搭建 From https://joelying.github.io/ 参考 Hexo+Github建站GitHub+Hexo 搭建个人网站详细教程Hexo建站教程Github+Hexo一站式部署个人博客(原创)GitHub Pages 搭建教程Hexo文档error YAMLException: can not read a block mapping entry…error git clone时报RPC failed; curl 18 transfer closed with outstanding read data remaining 错误git clone 报错：error: RPC failed; curl 18 transfer closed with outstanding read data remaining 解决办法在git bash 中配置git用户名和邮箱及查看配置信息七牛云存储添加自定义域名和域名解析图文教程网站域名、备案、七牛云图床重新搭建与博客整理如何验证域名已经配置成功–七牛云 样本博客 hexo里面Markdown对图片进行居中、设置大小看板娘Halo博客nexT-Muse]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Clover</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python爬取视频指南]]></title>
    <url>%2F%2Fblog%2FPython%E7%88%AC%E5%8F%96%E8%A7%86%E9%A2%91%E6%8C%87%E5%8D%97.html</url>
    <content type="text"><![CDATA[前言前两天尔羽说让我爬一下菜鸟窝的教程视频，这次就跟大家来说说Python爬取视频的经验 正文 https://www.cniao5.com/ 菜鸟窝上有很多教程视频，但是这些视频好像没有直接的下载地址，而且有些教程视频还是有期限的，那么问题就产生了我看的速度比较慢而且视频又很多，没等我看完视频就到期了怎么办？这时候写一个爬虫将这些教程视频下载下来就很好地解决了这个问题 当然，对于某些视频网站的VIP电影、视频之类的，一般情况下是无法在没有开通VIP的情况下用爬虫下载的，因为涉及到利益问题，同时数据传输也是加密的；想要看的话还是得开通会员再进行爬取 回到这次的目标上来，我们要爬取的是 https://www.cniao5.com/course/lessons/10153 上面的24章，共计202个教程视频 接下来我们来看看我们应该如何获取这些视频首先我们看一下这个界面的源代码中没有关于课程视频的信息，那么我们点进去一个视频看看 通过开发者工具我们可以看到左侧都是这次加载视频是动态加载的信息，我们一个个来看首先是url，我们可以看到这个链接是 Post 方式请求的（然鹅实际上再通过postman测试可以知道，并不用带上什么参数请求，吓唬人呢…） 这就是url返回的数据，其中 hd 、shd 代表高清、超清的视频类型，而当你访问这个链接后会自动下载一个 m3u8 文件，这介绍一下 m3u8 文件是指UTF-8编码格式的M3U文件。M3U文件是记录了一个索引纯文本文件，打开它时播放软件并不是播放它，而是根据它的索引找到对应的音视频文件的网络地址进行在线播放 而我们下载视频的方式就是通过向m3u8文件中的这些 .ts 的链接发送请求而下载一个个 ts视频流 （暂时这么称呼） 下一个就是 chapters ，这里呢则是包含了所有24章视频的一些基本信息 注意这里的 vid 参数，之后我们会用到这个就是网页上加载的m3u8 文件 这看似乱码的ts文件下载下来后就是一个几秒钟的视频了 而我们最后要做的就是将这些 ts 文件合成为一个 mp4 文件 那么如何来操作呢？ 思路通过请求 chapters 的链接获取每一个章节中每一个lesson的播放 url 地址（就是返回中带有 hd 、shd的），取出并请求 hd 的链接，下载m3u8文件，匹配m3u8文件中的每一个 ts ，请求 ts 文件对应的链接并下载到本地，最后合成为一个mp4视频 来跟着代码看一下首先小编是在本地先用代码创建好最终合成视频的存放的空文件夹以便访问 12345678910def mkd(): for i in range(1, 25): finalpath = 'D:\\Python\\PycharmProject\\FinalCniao5\\&#123;&#125;'.format(i) # 判断路径文件是否存在，不存在则创建 f = os.path.exists(finalpath) if not f: os.makedirs(finalpath) print('make file success...') else: print('file already exists...') 接着创建对应章节的文件夹 1234567891011121314151617# 防止 requests 开得太多s = requests.session()r_chapters = s.get('https://www.cniao5.com/api/v1/course/10153/chapters')json_chapters = r_chapters.json()# print(json_chapters)for chapter in json_chapters: # 每一个章节 chapter_name = chapter['bsort'] print(chapter_name) # 根据课程数创建对应的课程文件夹 path1 = self.file_path1.format(chapter_name) f = os.path.exists(path1) if not f: os.makedirs(path1) print('make file success...') else: print('file already exists...') 对章节中的每一个课程，获取其 id、key、file_id 创建对应的课程文件夹（用来保存ts文件） 1234567891011121314for lessons in chapter['lessons']: # 章节下的每一个课程 lessons_name = 'lessons' + str(lessons['bsort']) # 获取其id video_id = lessons['video_info']['vid'] # 获取 key key = lessons['key'] # 后面用到 file_id = lessons['video_info']['file_id'] print(lessons_name, video_id) # 每个视频创建一个视频id的文件夹 path = 'D:\\Python\\PycharmProject\\Cniao5\\&#123;&#125;\\&#123;&#125;'.format(chapter_name, lessons_name) f = os.path.exists(path) # 基于中断后，创建文件时判断，若存在该文件夹则跳过对该视频的下载，若不存在则继续 对于之后则需要分为两种情况，我不知道菜鸟窝是怎么想的，你可以看到对于有的视频 vid 有具体的数值，有的则是 0 也就是说对于 vid 有值的我们可以很容易构造 url 链接从而获取 m3u8 文件进而下载 ts 视频；但是对于没有的来说就麻烦了，我们不能直接构造这个 url 链接而对于这一类视频则是这样的 这类视频不是通过 m3u8 来处理视频的而是直接给了一个 mp4 的地址，那么也就是说对于 vid 为0的视频我们需要访问 https://playvideo.qcloud.com/getplayinfo/v2/1255567694/5285890782726972640 才可以拿到这个视频，那么这个 url 中后面的两个参数是什么呢这个 ``` 我们在上图中可以发现就是之前提到的 **file_id** 这也是我们为什么要获取的原因；而前面的``` 1255567694 ```你多看几个就知道这个是不变的123456789101112131415161718而当你去访问这个 MP4 的链接时菜鸟窝会告诉你，你没有权限请求这个链接，what？而这时候你要知道所谓爬虫就是模拟人对浏览器进行的操作而获取一定的结果，那么我们可以带上请求头来试试，小编是在用 fiddler 抓包后肯定了这一点，最后测试发现只要带上 header 中的 **referer** 就可以访问![2019-01-02_230702.png](https://upload-images.jianshu.io/upload_images/7933544-4c18c0c834d80ca0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)![2019-01-02_231030.png](https://upload-images.jianshu.io/upload_images/7933544-b8e3105bd624cf1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)而这个 referer 也是有讲究的，这个后面跟的奇怪的参数正是上述中你们都快忘了的 **key** ，这个是每个 lesson 中都有的![](https://upload-images.jianshu.io/upload_images/7933544-5174a26b0e2b03dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)![](https://upload-images.jianshu.io/upload_images/7933544-95f0421b423fd9b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)所以对于这种情况，之后只要把请求 MP4 链接后的内容以二进制方式保存就行此外还要注意对于 ts 文件，在请求时的前缀是``` https://vodi97egsxf.vod.126.net/vodi97egsxf/ 而在合并 ts 文件时，我用的是通过Python调用 windows 自带的合成的命令来合成，但是需要注意合成时候的文件名一定按 001，002，…，010，…，099，100…如此排列；而如果按 1，2，3，…，10，11，…，99，100 则合并不会成功 所以在保存时就应该注意指定文件的名称即可 好了看到这里相信你应该有了一个基本的认识了，需要完整源码的也可以联系小编]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
